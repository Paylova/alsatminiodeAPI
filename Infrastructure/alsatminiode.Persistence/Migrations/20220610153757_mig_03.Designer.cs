// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using alsatminiode.Persistence.Contexts;

#nullable disable

namespace alsatminiode.Persistence.Migrations
{
    [DbContext(typeof(alsatminiodeAPIDbContext))]
    [Migration("20220610153757_mig_03")]
    partial class mig_03
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("alsatminiode.Domain.Entities.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("adminGSM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("adminLastSign")
                        .HasColumnType("datetime2");

                    b.Property<string>("adminMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adminName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adminPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adminSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adminUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAdmin")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("alsatminiode.Domain.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("cityCountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("cityIsActive")
                        .HasColumnType("bit");

                    b.Property<string>("cityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("cityCountryId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("alsatminiode.Domain.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("countryIsActive")
                        .HasColumnType("bit");

                    b.Property<string>("countryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("alsatminiode.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("customerAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("customerBirthDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("customerCityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("customerCountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("customerDistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("customerGSM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerIBAN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerPaymentChoose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("customerPhoneCost")
                        .HasColumnType("int");

                    b.Property<string>("customerPhoneDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerPhoneIMEI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("customerPhoneSituationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("customerSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerTC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("customerTotalCost")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("customerCityId");

                    b.HasIndex("customerCountryId");

                    b.HasIndex("customerDistrictId");

                    b.HasIndex("customerPhoneSituationId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("alsatminiode.Domain.Entities.District", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("districtCityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("districtCountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("districtIsActive")
                        .HasColumnType("bit");

                    b.Property<string>("districtName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("districtCityId");

                    b.HasIndex("districtCountryId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("alsatminiode.Domain.Entities.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Files");

                    b.HasDiscriminator<string>("Discriminator").HasValue("File");
                });

            modelBuilder.Entity("alsatminiode.Domain.Entities.PhoneBrand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("brandIsActive")
                        .HasColumnType("bit");

                    b.Property<string>("brandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PhoneBrands");
                });

            modelBuilder.Entity("alsatminiode.Domain.Entities.PhoneModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("modelBrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("modelFirstPrice")
                        .HasColumnType("int");

                    b.Property<bool>("modelIsActive")
                        .HasColumnType("bit");

                    b.Property<int>("modelLastPrice")
                        .HasColumnType("int");

                    b.Property<string>("modelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("modelPhoto")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("modelBrandId");

                    b.ToTable("PhoneModels");
                });

            modelBuilder.Entity("alsatminiode.Domain.Entities.PhoneQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("HighPrice")
                        .HasColumnType("bigint");

                    b.Property<long>("LowPrice")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("PhoneModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("QuestionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PhoneModelId");

                    b.ToTable("PhoneQuestions");
                });

            modelBuilder.Entity("alsatminiode.Domain.Entities.PhoneSituation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("phoneSituation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PhoneSituations");
                });

            modelBuilder.Entity("alsatminiode.Domain.Entities.WebsiteOption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("giftCouponRate")
                        .HasColumnType("real");

                    b.Property<string>("mailHost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mailPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mailPort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mailReplyMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mailUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("websiteLogo")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("WebsiteOptions");
                });

            modelBuilder.Entity("alsatminiode.Domain.Entities.PhoneModelImageFile", b =>
                {
                    b.HasBaseType("alsatminiode.Domain.Entities.File");

                    b.HasDiscriminator().HasValue("PhoneModelImageFile");
                });

            modelBuilder.Entity("alsatminiode.Domain.Entities.City", b =>
                {
                    b.HasOne("alsatminiode.Domain.Entities.Country", "cityCountry")
                        .WithMany("countryCities")
                        .HasForeignKey("cityCountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cityCountry");
                });

            modelBuilder.Entity("alsatminiode.Domain.Entities.Customer", b =>
                {
                    b.HasOne("alsatminiode.Domain.Entities.City", "customerCity")
                        .WithMany()
                        .HasForeignKey("customerCityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("alsatminiode.Domain.Entities.Country", "customerCountry")
                        .WithMany()
                        .HasForeignKey("customerCountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("alsatminiode.Domain.Entities.District", "customerDistrict")
                        .WithMany()
                        .HasForeignKey("customerDistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("alsatminiode.Domain.Entities.PhoneSituation", "customerPhoneSituation")
                        .WithMany()
                        .HasForeignKey("customerPhoneSituationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customerCity");

                    b.Navigation("customerCountry");

                    b.Navigation("customerDistrict");

                    b.Navigation("customerPhoneSituation");
                });

            modelBuilder.Entity("alsatminiode.Domain.Entities.District", b =>
                {
                    b.HasOne("alsatminiode.Domain.Entities.City", "districtCity")
                        .WithMany("cityDistricts")
                        .HasForeignKey("districtCityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("alsatminiode.Domain.Entities.Country", "districtCountry")
                        .WithMany()
                        .HasForeignKey("districtCountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("districtCity");

                    b.Navigation("districtCountry");
                });

            modelBuilder.Entity("alsatminiode.Domain.Entities.PhoneModel", b =>
                {
                    b.HasOne("alsatminiode.Domain.Entities.PhoneBrand", "modelBrand")
                        .WithMany("brandModels")
                        .HasForeignKey("modelBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("modelBrand");
                });

            modelBuilder.Entity("alsatminiode.Domain.Entities.PhoneQuestion", b =>
                {
                    b.HasOne("alsatminiode.Domain.Entities.PhoneModel", null)
                        .WithMany("phoneQuestions")
                        .HasForeignKey("PhoneModelId");
                });

            modelBuilder.Entity("alsatminiode.Domain.Entities.City", b =>
                {
                    b.Navigation("cityDistricts");
                });

            modelBuilder.Entity("alsatminiode.Domain.Entities.Country", b =>
                {
                    b.Navigation("countryCities");
                });

            modelBuilder.Entity("alsatminiode.Domain.Entities.PhoneBrand", b =>
                {
                    b.Navigation("brandModels");
                });

            modelBuilder.Entity("alsatminiode.Domain.Entities.PhoneModel", b =>
                {
                    b.Navigation("phoneQuestions");
                });
#pragma warning restore 612, 618
        }
    }
}
